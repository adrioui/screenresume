// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package repositories

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CandidateAndJobRoles(ctx context.Context, arg CandidateAndJobRolesParams) ([]CandidateAndJobRolesRow, error)
	CreateApplication(ctx context.Context, arg CreateApplicationParams) (Application, error)
	CreateCandidate(ctx context.Context, arg CreateCandidateParams) (Candidate, error)
	CreateCandidateSkills(ctx context.Context, arg CreateCandidateSkillsParams) (CandidateSkill, error)
	CreateDepartment(ctx context.Context, name string) (Department, error)
	CreateFile(ctx context.Context, arg CreateFileParams) (File, error)
	CreateJobRole(ctx context.Context, arg CreateJobRoleParams) (JobRole, error)
	CreateJobRoleRequirement(ctx context.Context, arg CreateJobRoleRequirementParams) (JobRoleRequirement, error)
	CreateScreeningCriteria(ctx context.Context, arg CreateScreeningCriteriaParams) (ScreeningCriterium, error)
	CreateScreeningResults(ctx context.Context, arg CreateScreeningResultsParams) (ScreeningResult, error)
	CreateSkill(ctx context.Context, arg CreateSkillParams) (Skill, error)
	DeleteApplication(ctx context.Context, id uuid.UUID) error
	DeleteCandidate(ctx context.Context, id uuid.UUID) error
	DeleteCandidateSkills(ctx context.Context, arg DeleteCandidateSkillsParams) error
	DeleteDepartment(ctx context.Context, id uuid.UUID) error
	DeleteFile(ctx context.Context, id uuid.UUID) error
	DeleteJobRole(ctx context.Context, id uuid.UUID) error
	DeleteJobRoleRequirement(ctx context.Context, arg DeleteJobRoleRequirementParams) error
	DeleteSkill(ctx context.Context, id uuid.UUID) error
	GetApplication(ctx context.Context, id uuid.UUID) (Application, error)
	GetApplicationByFileID(ctx context.Context, id uuid.UUID) (uuid.UUID, error)
	GetCandidate(ctx context.Context, id uuid.UUID) (Candidate, error)
	GetCandidateSkills(ctx context.Context, arg GetCandidateSkillsParams) (CandidateSkill, error)
	GetDepartment(ctx context.Context, id uuid.UUID) (Department, error)
	GetFile(ctx context.Context, id uuid.UUID) (File, error)
	GetFilesByPath(ctx context.Context, path string) ([]File, error)
	GetJobRole(ctx context.Context, id uuid.UUID) (JobRole, error)
	GetJobRoleRequirement(ctx context.Context, arg GetJobRoleRequirementParams) (JobRoleRequirement, error)
	GetScreeningCriteria(ctx context.Context, id uuid.UUID) (ScreeningCriterium, error)
	GetScreeningResults(ctx context.Context, id uuid.UUID) (ScreeningResult, error)
	GetSkill(ctx context.Context, id uuid.UUID) (Skill, error)
	GetSkillByName(ctx context.Context, name string) (Skill, error)
	ListApplications(ctx context.Context) ([]Application, error)
	ListCandidateSkills(ctx context.Context) ([]CandidateSkill, error)
	ListCandidates(ctx context.Context) ([]Candidate, error)
	ListDepartments(ctx context.Context) ([]Department, error)
	ListFiles(ctx context.Context) ([]File, error)
	ListJobRoleRequirements(ctx context.Context) ([]JobRoleRequirement, error)
	ListJobRoles(ctx context.Context) ([]JobRole, error)
	ListScreeningCriteria(ctx context.Context) ([]ScreeningCriterium, error)
	ListScreeningResults(ctx context.Context) ([]ScreeningResult, error)
	ListSkills(ctx context.Context) ([]Skill, error)
	ToggleJobRoleRequirement(ctx context.Context, arg ToggleJobRoleRequirementParams) error
	UpdateApplication(ctx context.Context, arg UpdateApplicationParams) error
	UpdateCandidate(ctx context.Context, arg UpdateCandidateParams) error
	UpdateCandidateSkills(ctx context.Context, arg UpdateCandidateSkillsParams) error
	UpdateDepartment(ctx context.Context, arg UpdateDepartmentParams) error
	UpdateFile(ctx context.Context, arg UpdateFileParams) error
	UpdateJobRole(ctx context.Context, arg UpdateJobRoleParams) error
	UpdateJobRoleRequirement(ctx context.Context, arg UpdateJobRoleRequirementParams) error
	UpdateSkill(ctx context.Context, arg UpdateSkillParams) error
}

var _ Querier = (*Queries)(nil)
