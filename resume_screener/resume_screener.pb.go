// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.1
// source: resume_screener.proto

package resume_screener

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadResumeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*UploadResumeRequest_Info
	//	*UploadResumeRequest_Chunk
	Data          isUploadResumeRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResumeRequest) Reset() {
	*x = UploadResumeRequest{}
	mi := &file_resume_screener_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResumeRequest) ProtoMessage() {}

func (x *UploadResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resume_screener_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResumeRequest.ProtoReflect.Descriptor instead.
func (*UploadResumeRequest) Descriptor() ([]byte, []int) {
	return file_resume_screener_proto_rawDescGZIP(), []int{0}
}

func (x *UploadResumeRequest) GetData() isUploadResumeRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadResumeRequest) GetInfo() *FileInfo {
	if x != nil {
		if x, ok := x.Data.(*UploadResumeRequest_Info); ok {
			return x.Info
		}
	}
	return nil
}

func (x *UploadResumeRequest) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*UploadResumeRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isUploadResumeRequest_Data interface {
	isUploadResumeRequest_Data()
}

type UploadResumeRequest_Info struct {
	Info *FileInfo `protobuf:"bytes,1,opt,name=info,proto3,oneof"`
}

type UploadResumeRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*UploadResumeRequest_Info) isUploadResumeRequest_Data() {}

func (*UploadResumeRequest_Chunk) isUploadResumeRequest_Data() {}

type FileInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_resume_screener_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_resume_screener_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_resume_screener_proto_rawDescGZIP(), []int{1}
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type UploadResumeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectName    string                 `protobuf:"bytes,1,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResumeResponse) Reset() {
	*x = UploadResumeResponse{}
	mi := &file_resume_screener_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResumeResponse) ProtoMessage() {}

func (x *UploadResumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resume_screener_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResumeResponse.ProtoReflect.Descriptor instead.
func (*UploadResumeResponse) Descriptor() ([]byte, []int) {
	return file_resume_screener_proto_rawDescGZIP(), []int{2}
}

func (x *UploadResumeResponse) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

type ScreenResumeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ObjectName     string                 `protobuf:"bytes,1,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	Filename       string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	JobDescription string                 `protobuf:"bytes,3,opt,name=job_description,json=jobDescription,proto3" json:"job_description,omitempty"`
	Criteria       []string               `protobuf:"bytes,4,rep,name=criteria,proto3" json:"criteria,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScreenResumeRequest) Reset() {
	*x = ScreenResumeRequest{}
	mi := &file_resume_screener_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenResumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenResumeRequest) ProtoMessage() {}

func (x *ScreenResumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resume_screener_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenResumeRequest.ProtoReflect.Descriptor instead.
func (*ScreenResumeRequest) Descriptor() ([]byte, []int) {
	return file_resume_screener_proto_rawDescGZIP(), []int{3}
}

func (x *ScreenResumeRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *ScreenResumeRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ScreenResumeRequest) GetJobDescription() string {
	if x != nil {
		return x.JobDescription
	}
	return ""
}

func (x *ScreenResumeRequest) GetCriteria() []string {
	if x != nil {
		return x.Criteria
	}
	return nil
}

type ScreenResumeResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CriteriaDecisions []*CriteriaDecision    `protobuf:"bytes,1,rep,name=criteria_decisions,json=criteriaDecisions,proto3" json:"criteria_decisions,omitempty"`
	OverallReasoning  string                 `protobuf:"bytes,2,opt,name=overall_reasoning,json=overallReasoning,proto3" json:"overall_reasoning,omitempty"`
	OverallDecision   bool                   `protobuf:"varint,3,opt,name=overall_decision,json=overallDecision,proto3" json:"overall_decision,omitempty"`
	ResumeName        string                 `protobuf:"bytes,4,opt,name=resume_name,json=resumeName,proto3" json:"resume_name,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ScreenResumeResponse) Reset() {
	*x = ScreenResumeResponse{}
	mi := &file_resume_screener_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenResumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenResumeResponse) ProtoMessage() {}

func (x *ScreenResumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resume_screener_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenResumeResponse.ProtoReflect.Descriptor instead.
func (*ScreenResumeResponse) Descriptor() ([]byte, []int) {
	return file_resume_screener_proto_rawDescGZIP(), []int{4}
}

func (x *ScreenResumeResponse) GetCriteriaDecisions() []*CriteriaDecision {
	if x != nil {
		return x.CriteriaDecisions
	}
	return nil
}

func (x *ScreenResumeResponse) GetOverallReasoning() string {
	if x != nil {
		return x.OverallReasoning
	}
	return ""
}

func (x *ScreenResumeResponse) GetOverallDecision() bool {
	if x != nil {
		return x.OverallDecision
	}
	return false
}

func (x *ScreenResumeResponse) GetResumeName() string {
	if x != nil {
		return x.ResumeName
	}
	return ""
}

type CriteriaDecision struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reasoning     string                 `protobuf:"bytes,1,opt,name=reasoning,proto3" json:"reasoning,omitempty"`
	Decision      bool                   `protobuf:"varint,2,opt,name=decision,proto3" json:"decision,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CriteriaDecision) Reset() {
	*x = CriteriaDecision{}
	mi := &file_resume_screener_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CriteriaDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriteriaDecision) ProtoMessage() {}

func (x *CriteriaDecision) ProtoReflect() protoreflect.Message {
	mi := &file_resume_screener_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriteriaDecision.ProtoReflect.Descriptor instead.
func (*CriteriaDecision) Descriptor() ([]byte, []int) {
	return file_resume_screener_proto_rawDescGZIP(), []int{5}
}

func (x *CriteriaDecision) GetReasoning() string {
	if x != nil {
		return x.Reasoning
	}
	return ""
}

func (x *CriteriaDecision) GetDecision() bool {
	if x != nil {
		return x.Decision
	}
	return false
}

var File_resume_screener_proto protoreflect.FileDescriptor

var file_resume_screener_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x22, 0x66, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x49, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x37, 0x0a, 0x14, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6a, 0x6f, 0x62,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x22, 0xe1,
	0x01, 0x0a, 0x14, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x63, 0x72, 0x69, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x76, 0x65,
	0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c,
	0x6c, 0x5f, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x10, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x61, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x32, 0xd0, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x65, 0x72, 0x12, 0x5d, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6d, 0x65, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x28, 0x01, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_resume_screener_proto_rawDescOnce sync.Once
	file_resume_screener_proto_rawDescData []byte
)

func file_resume_screener_proto_rawDescGZIP() []byte {
	file_resume_screener_proto_rawDescOnce.Do(func() {
		file_resume_screener_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resume_screener_proto_rawDesc), len(file_resume_screener_proto_rawDesc)))
	})
	return file_resume_screener_proto_rawDescData
}

var file_resume_screener_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_resume_screener_proto_goTypes = []any{
	(*UploadResumeRequest)(nil),  // 0: resume_screener.UploadResumeRequest
	(*FileInfo)(nil),             // 1: resume_screener.FileInfo
	(*UploadResumeResponse)(nil), // 2: resume_screener.UploadResumeResponse
	(*ScreenResumeRequest)(nil),  // 3: resume_screener.ScreenResumeRequest
	(*ScreenResumeResponse)(nil), // 4: resume_screener.ScreenResumeResponse
	(*CriteriaDecision)(nil),     // 5: resume_screener.CriteriaDecision
}
var file_resume_screener_proto_depIdxs = []int32{
	1, // 0: resume_screener.UploadResumeRequest.info:type_name -> resume_screener.FileInfo
	5, // 1: resume_screener.ScreenResumeResponse.criteria_decisions:type_name -> resume_screener.CriteriaDecision
	3, // 2: resume_screener.ResumeScreener.ScreenResume:input_type -> resume_screener.ScreenResumeRequest
	0, // 3: resume_screener.ResumeScreener.UploadResume:input_type -> resume_screener.UploadResumeRequest
	4, // 4: resume_screener.ResumeScreener.ScreenResume:output_type -> resume_screener.ScreenResumeResponse
	2, // 5: resume_screener.ResumeScreener.UploadResume:output_type -> resume_screener.UploadResumeResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_resume_screener_proto_init() }
func file_resume_screener_proto_init() {
	if File_resume_screener_proto != nil {
		return
	}
	file_resume_screener_proto_msgTypes[0].OneofWrappers = []any{
		(*UploadResumeRequest_Info)(nil),
		(*UploadResumeRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resume_screener_proto_rawDesc), len(file_resume_screener_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resume_screener_proto_goTypes,
		DependencyIndexes: file_resume_screener_proto_depIdxs,
		MessageInfos:      file_resume_screener_proto_msgTypes,
	}.Build()
	File_resume_screener_proto = out.File
	file_resume_screener_proto_goTypes = nil
	file_resume_screener_proto_depIdxs = nil
}
